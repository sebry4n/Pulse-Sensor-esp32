#include <Wire.h>
#include <U8g2lib.h>

#define bitmap_width 64
#define bitmap_height 64

// 'furina-in-the-omori-art-style-v0-2hxbcx9pt38c1', 128x64px
const unsigned char epd_bitmap_furina_in_the_omori_art_style_v0_2hxbcx9pt38c1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb6, 0x01, 0x00, 
	0x00, 0x00, 0x7e, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x80, 0xff, 0x06, 0x00, 
	0x00, 0x00, 0x01, 0x01, 0xc0, 0xb6, 0x09, 0x00, 0x00, 0x80, 0x01, 0x01, 0xe0, 0xff, 0x1d, 0x00, 
	0x00, 0xc0, 0x38, 0x86, 0xf7, 0xff, 0x37, 0x00, 0x00, 0x30, 0xc6, 0xc1, 0xff, 0xb7, 0x0f, 0x00, 
	0x00, 0x30, 0xc6, 0xc1, 0xff, 0xf7, 0x0f, 0x00, 0x00, 0x30, 0x01, 0xf0, 0x8f, 0xff, 0x0f, 0x00, 
	0x00, 0x30, 0x3e, 0xc0, 0x3f, 0xfc, 0x0f, 0x00, 0x00, 0x30, 0x3e, 0xc0, 0x7f, 0xf8, 0x0e, 0x00, 
	0x00, 0xc0, 0xc0, 0xf9, 0xff, 0xf3, 0x07, 0x00, 0x00, 0xc0, 0xc0, 0xf9, 0xff, 0xf1, 0x07, 0x00, 
	0x00, 0x00, 0x0f, 0x06, 0xf8, 0xb9, 0x09, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x77, 0x0e, 0x00, 
	0x00, 0x00, 0x70, 0x00, 0xf0, 0x37, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0xc0, 0x3f, 0x09, 0x00, 
	0x00, 0x00, 0x08, 0x00, 0x80, 0xff, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x80, 0xff, 0x07, 0x00, 
	0x00, 0x00, 0x06, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xfe, 0x01, 0x00, 
	0x00, 0x00, 0x06, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x40, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0x06, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x86, 0x09, 0x00, 0x30, 0x00, 0x00, 
	0x00, 0x00, 0x81, 0x31, 0x38, 0x40, 0x00, 0x00, 0x00, 0x00, 0x81, 0x31, 0x38, 0x40, 0x00, 0x00, 
	0x00, 0xc0, 0xc0, 0xc0, 0xc6, 0x80, 0x01, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc6, 0x80, 0x01, 0x00, 
	0x00, 0x00, 0xc1, 0xc0, 0xb6, 0x41, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x80, 0xb1, 0x31, 0x00, 0x00, 
	0x00, 0x00, 0xc1, 0x00, 0xb1, 0x31, 0x00, 0x00, 0x00, 0x00, 0xce, 0x00, 0xb0, 0x09, 0x00, 0x00, 
	0x00, 0x00, 0xc8, 0x00, 0x80, 0x09, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x80, 0x09, 0x00, 0x00, 
	0x00, 0x00, 0xb0, 0x07, 0xf0, 0x06, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xf0, 0x03, 0x00, 0x00, 
	0x00, 0x00, 0xc0, 0xfe, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x80, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x01, 0x00, 0x00, 
	0x00, 0x00, 0xe0, 0xff, 0xbf, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfe, 0xbf, 0x07, 0x00, 0x00, 
	0x00, 0x00, 0xf8, 0xc9, 0xff, 0x09, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xc9, 0xff, 0x09, 0x00, 0x00, 
	0x00, 0x00, 0xf8, 0xf7, 0x7d, 0x08, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xc1, 0xff, 0x07, 0x00, 0x00, 
	0x00, 0x00, 0xf0, 0xc1, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf7, 0xf7, 0x07, 0x00, 0x00, 
	0x00, 0x00, 0xf0, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xdf, 0x07, 0x00, 0x00, 
	0x00, 0x00, 0xc0, 0xf1, 0xc7, 0x07, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf1, 0xc7, 0x03, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xf1, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x38, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



// I2C: for SSH1106 OLED on ESP32
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(
  U8G2_R0,     // No rotation
  /* clock=*/ 6, /* data=*/ 5, /* reset=*/ U8X8_PIN_NONE
);

void setup() {
  u8g2.begin();
}

void loop() {
  u8g2.clearBuffer();
  u8g2.drawXBMP(64,0, bitmap_width, bitmap_height, epd_bitmap_furina_in_the_omori_art_style_v0_2hxbcx9pt38c1);
  u8g2.sendBuffer();
  delay(1000);
}